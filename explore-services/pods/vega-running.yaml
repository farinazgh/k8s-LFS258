apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"run":"vega"},"name":"vega","namespace":"default"},"spec":{"containers":[{"command":["/bin/sh","-c","echo \"Custom script executed\"; sleep 3600"],"env":[{"name":"ENV","value":"PROD"}],"image":"nginx","name":"vega","ports":[{"containerPort":8080}],"resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
  labels:
    run: vega
  name: vega
  namespace: default
spec:
  containers:
    - command:
        - /bin/sh
        - -c
        - echo "Custom script executed"; sleep 3600
      env:
        - name: ENV
          value: PROD
      image: nginx
      imagePullPolicy: Always
      name: vega
      ports:
        - containerPort: 8080
          protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-qq7fw
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: node01
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-qq7fw
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-18T08:54:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-18T08:54:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-18T08:54:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-18T08:54:49Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://46d7ce1389156cee8cd6aba570ec779b316d7f968194ebf88b59577a1d2a8933
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:d2cb0992f098fb075674730da5e1c6cccdd4890516e448a1db96e0245c1b7fca
      lastState: {}
      name: vega
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-18T08:54:50Z"
  hostIP: 192.15.12.8
  phase: Running
  podIP: 10.244.1.7
  podIPs:
    - ip: 10.244.1.7
  qosClass: BestEffort
  startTime: "2024-04-18T08:54:49Z"